# import th∆∞ vi·ªán 
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from random import randint
import streamlit as st
import io

# Ghi ti√™u ƒë·ªÅ cho b√†i ph√¢n t√≠ch d·ªØ li·ªáu
st.title("üìÉ Ph√¢n t√≠ch doanh s·ªë b√°n m√°y t√≠nh s√°ch tay trong nƒÉm 2024") 
st.header("üí∞ GI·∫¢ S·ª¨ B·∫†N ƒêANG L√Ä NH√ÇN VI√äN PH√ÇN T√çCH D·ªÆ LI·ªÜU C·ª¶A M·ªòT C√îNG TY B√ÅN M√ÅY T√çNH S√ÅCH TAY V√Ä B·∫†N ƒêANG PH√ÇN T√çCH V·ªÄ D·ªÆ LI·ªÜU B√ÅN H√ÄNG C·ª¶A C√îNG TY TRONG NƒÇM 2024")

# # load dataset
@st.cache_data
def load_data():
    data = pd.read_csv('C:\DATA\laptop_prices.csv')
    data['LY price'] = data['Price ($)'] - 100
    months = ["January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"]
    months_of_df = []
    for i in range(len(data)):
        months_of_df.append(months[randint(0,len(months)-1)])
    data['months'] = months_of_df
    return data
data = load_data()
st.subheader("D·ªØ li·ªáu Doanh s·ªë b√°n m√°y t√≠nh v√† h√†nh vi mua m√°y t√≠nh c·ªßa kh√°ch h√†ng 2024:")
st.write(data)
st.subheader("5 sample ƒë·∫ßu c·ªßa d·ªØ li·ªáu")
st.write(data.head(5))
st.subheader("5 sample cu·ªëi c·ªßa d·ªØ li·ªáu")
st.write(data.tail(5))
st.subheader("Th√¥ng tin t·ªïng qu√°t c·ªßa d·ªØ li·ªáu")

# hi·ªán th·ªã d·ªØ li·ªáu console 
buffer = io.StringIO()
data.info(buf=buffer)
info_str = buffer.getvalue()

# D√πng st.code() ƒë·ªÉ hi·ªÉn th·ªã nh∆∞ console (gi·ªØ format + xu·ªëng d√≤ng)
st.code(info_str, language="text")

# Ph√¢n t√≠ch t·ªïng quan v·ªÅ d·ªØ li·ªáu
st.markdown("### üìÅ ***T·ªïng quan v·ªÅ d·ªØ li·ªáu***", unsafe_allow_html=True)
st.markdown("""
- *D·ªØ li·ªáu ƒë∆∞·ª£c thu th·∫≠p t·ª´ c∆° s·ªü d·ªØ li·ªáu v·ªÅ doanh s·ªë b√°n h√†ng c·ªßa c√¥ng ty trong nƒÉm 2024 b·∫±ng SQL*  
- *T·∫≠p d·ªØ li·ªáu n√≥i v·ªÅ nhu c·∫ßu mua, s·ª≠ d·ª•ng v√† xu h∆∞·ªõng ch·ªçn mua m√°y laptop c√° nh√¢n c·ªßa kh√°ch h√†ng trong 1 nƒÉm qua*  
- *T·∫≠p d·ªØ li·ªáu bao g·ªìm nh·ªØng th√¥ng tin c∆° b·∫£n sau:*
    + *D·ªØ li·ªáu c√≥ t·ªïng c·ªông 11771 sample*
    + *D·ªØ li·ªáu c√≥ 13 feature (columns) bao g·ªìm:*
        <div style="margin-left: 40px">
        ‚Ä¢ <b>Brand</b>: N√≥i v·ªÅ c√°c h√£ng m√°y t√≠nh nh∆∞ Apple, MSI, Asus, ...  <br>
        ‚Ä¢ <b>Processor</b>: ch·ª©a th√¥ng tin v·ªÅ c√°c b·ªô x·ª≠ l√Ω c·ªßa m√°y t√≠nh nh∆∞ AMD Ryzen, Intel i3, i5, i7...  <br>
        ‚Ä¢ <b>RAM (GB)</b>: dung l∆∞·ª£ng RAM m√† m√°y t√≠nh c√≥ (GB)  <br>
        ‚Ä¢ <b>Storage</b>: th√¥ng tin v·ªÅ dung l∆∞·ª£ng ·ªï c·ª©ng v√† lo·∫°i ·ªï SSD ho·∫∑c HDD  <br>
        ‚Ä¢ <b>GPU</b>: th√¥ng tin GPU nh∆∞ Nvidia RTX 3080, RTX 3198...  <br>
        ‚Ä¢ <b>Screen Size (inch)</b>: k√≠ch th∆∞·ªõc m√†n h√¨nh (inch)  <br>
        ‚Ä¢ <b>Resolution</b>: ƒë·ªô ph√¢n gi·∫£i m√†n h√¨nh  <br>
        ‚Ä¢ <b>Battery Life (hours)</b>: v√≤ng ƒë·ªùi pin c·ªßa laptop  <br>
        ‚Ä¢ <b>Weight (kg)</b>: tr·ªçng l∆∞·ª£ng c·ªßa m√°y  <br>
        ‚Ä¢ <b>Operating System</b>: h·ªá ƒëi·ªÅu h√†nh nh∆∞ Windows, macOS, Linux...  <br>
        ‚Ä¢ <b>Price ($)</b>: gi√° b√°n c·ªßa laptop  <br>
        ‚Ä¢ <b>LY price</b>: gi√° c·ªßa laptop c√πng k·ª≥ nƒÉm ngo√°i  <br>
        ‚Ä¢ <b>months</b>: c√°c th√°ng trong nƒÉm  
        </div>  
    + *Trong ƒë√≥ c√≥ 6 feature ki·ªÉu d·ªØ li·ªáu `float64` v√† 7 feature ki·ªÉu `object`*  
    + *T·∫≠p d·ªØ li·ªáu s·ª≠ d·ª•ng h·∫øt ~1.2MB b·ªô nh·ªõ ch√≠nh*
""", unsafe_allow_html=True)

# v·∫Ω bi·ªÉu ƒë·ªì t·ªïng s·ªë l∆∞·ª£ng null c·ªßa m·ªói c·ªôt
total_null_columns = data.isna().sum().reset_index()
plt.figure(figsize=(20,5))
sns.barplot(x='index',y=0,data=total_null_columns,hue='index')
x = [i for i in range(len(total_null_columns))]
for i,j in zip(x,total_null_columns[0]):
    if(j != 0):
        plt.text(i,j,j)
plt.title("S·ªë l∆∞·ª£ng gi√° tr·ªã null c·ªßa m·ªói c·ªôt")
st.pyplot(plt)
st.subheader("S·ªë sample v√† columns c·ªßa data")
st.write(data.shape)

# hi·ªán th·ªã l√™n c√°c c·ªôt c√≥ gi√° tr·ªã null v√† t·ªïng s·ªë null c·ªßa m·ªói c·ªôt
st.subheader("C√°c column c√≥ gi√° tr·ªã null v√† s·ªë l∆∞·ª£ng null c·ªßa m·ªói c·ªôt")
cot_co_gia_tri_null = data.columns[data.isnull().any()]
sum_null = data.isna().sum()
c1,c2 = st.columns(2)
with c1:
    st.write("üìä S·ªë l∆∞·ª£ng missing value")
    st.dataframe(sum_null)
with c2:
    st.write("üìã T√™n c√°c c·ªôt c√≥ missing value")
    st.dataframe(cot_co_gia_tri_null)

st.markdown("""### ‚ö†Ô∏è ***D·ªØ li·ªáu thi·∫øu***
 - *C√°c c·ªôt c√≥ gi√° tr·ªã thi·∫øu bao g·ªìm :*
     + *Brand: 85 miss , Processer: 44 miss, RAM : 15 miss,Battery Life : 4 miss,Operating System : 5 miss*
 """)

# x·ª≠ l√Ω c√°c gi√° tr·ªã b·ªã null
for i in range(len(cot_co_gia_tri_null)):
    if(data[cot_co_gia_tri_null[i]].dtype == 'O'):
        data[cot_co_gia_tri_null[i]].fillna(data[cot_co_gia_tri_null[i]].mode()[0],inplace=True)
    elif(data[cot_co_gia_tri_null[i]].dtype == 'float'):
        data[cot_co_gia_tri_null[i]].fillna(data[cot_co_gia_tri_null[i]].mean(),inplace=True)

# x√≥a ƒëi c√°c gi√° tr·ªã tr√πng l·∫∑p
data = data.drop_duplicates(keep='first')

# chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu c·ªßa c√°c column trong data
data['RAM (GB)'] = data['RAM (GB)'].astype('int')
